services:
  nginx:
    image: nginx:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      frontend:
        condition: service_started
      backend:
        condition: service_started
    restart: unless-stopped  # เพิ่มบรรทัดนี้
    networks:
      - app-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.frontend
    # ports:
    #   - "5173:5173"
    # volumes:
    #   - ./frontend:/app
    #   - /app/node_modules
    env_file:
      - ./frontend/.env
    depends_on:
      - backend
    healthcheck:  # เพิ่ม healthcheck
      test: ["CMD", "curl", "-f", "http://localhost:5173"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - app-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.backend
    # ports:
    #   - "5000:5000"
    # volumes:
    #   - ./backend:/app
    #   - ./backend/prisma:/app/prisma
    #   - /app/node_modules
    env_file:
      - ./backend/.env
    depends_on:
      db:
        condition: service_healthy
    healthcheck:  # เพิ่ม healthcheck
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - app-network

  db:
    image: postgres:17
    restart: unless-stopped
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  pgadmin:
    image: dpage/pgadmin4:latest
    restart: unless-stopped
    env_file:
      - .env
    # ports:
    #   - "5050:80"
    depends_on:
      - db
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - app-network

volumes:
  postgres_data:
  pgadmin_data:

networks:
  app-network:
    driver: bridge