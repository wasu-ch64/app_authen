# version: '3.9'

services:
  client:
    build: 
      # context: ./client
      context: ./client
      dockerfile: Dockerfile.client
    ports:
      - "5173:5173"
    volumes:
      - ./client:/app
      - /app/node_modules
    env_file:
      - ./client/.env
    depends_on:
      - server
    networks:
      - app-network

  server:
    build: 
      # context: ./server
      context: ./server
      dockerfile: Dockerfile.server
    ports:
      - "3000:5000"
    volumes:
      - ./server:/app
      - ./server/prisma:/app/prisma
      - /app/node_modules
    env_file:
      - ./server/.env
    depends_on:
      db:
        condition: service_healthy 
    networks:
      - app-network

  db:
    image: postgres:17
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  pgadmin:
    image: dpage/pgadmin4:latest
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - "5050:80"
    depends_on:
      - db
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - app-network

  # nginx:
  #   image: nginx:latest
  #   ports:
  #     - "8080:80" # NGINX รับคำขอที่พอร์ต 8080
  #   volumes:
  #     - ./nginx/nginx.conf:/etc/nginx/nginx.conf # Mount ไฟล์ nginx.conf
  #   depends_on:
  #     - client
  #     - server
  #   networks:
  #     - app-network

volumes:
  postgres_data:
  pgadmin_data:

networks:
  app-network:
    driver: bridge