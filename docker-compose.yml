services:

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - client
      - server
    networks:
      - app-network

  client:
    build:
      context: ./client
      dockerfile: Dockerfile.client
    ports:
      - "5173:5173"
    volumes:
      - ./client:/app
      - /app/node_modules
    env_file:
      - ./client/.env
    depends_on:
      - server
    networks:
      - app-network

  server:
    build:
      context: ./server
      dockerfile: Dockerfile.server
    ports:
      - "5000:5000"
    volumes:
      - ./server:/app
      - ./server/prisma:/app/prisma
      - /app/node_modules
    env_file:
      - ./server/.env
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network
      - sonarqube-network

  db:
    image: postgres:17
    restart: unless-stopped
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  pgadmin:
    image: dpage/pgadmin4:latest
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - "5050:80"
    depends_on:
      - db
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - app-network
  sonar-db:
    image: postgres:13
    restart: unless-stopped
    environment:
      POSTGRES_DB: sonarqube
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: sonar
    volumes:
      - sonar_db_data:/var/lib/postgresql/data
    networks:
      - sonarqube-network

  sonarqube:
    image: sonarqube:community
    platform: linux/arm64
    ports:
      - "9000:9000"
    volumes:
      - sonarqube_data:/opt/sonarqube/data
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://sonar-db:5432/sonarqube
      SONAR_JDBC_USERNAME: sonar
      SONAR_JDBC_PASSWORD: sonar
    depends_on:
      - sonar-db
    networks:
      - sonarqube-network
    deploy:
      resources:
        limits:
          memory: 2g

  owasp-dependency-check:
    image: owasp/dependency-check:latest
    platform: linux/amd64
    volumes:
      - ./server:/src
      - ./reports:/reports
    command: --scan /src --format HTML --out /reports --project "app_authen"
    networks:
      - app-network

volumes:
  postgres_data:
  pgadmin_data:
  sonarqube_data:
  sonarqube_extensions:
  sonar_db_data:

networks:
  app-network:
    driver: bridge
  sonarqube-network:
    driver: bridge